openapi: 3.0.0
info:
  description: |
    Application to manage TSE Mobilities
  version: "1.0.0"
  title: Mobilit√©s TSE
tags:
  - name: login
    description: Login API
  - name: promotions
    description: Operations about promotions
  - name: students
    description: Operations about students
  - name: travels
    description: Operations about travels
paths:
  /promotions:
    get:
      tags:
        - promotions
      summary: Get all promotions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
                  
  '/promotions/{id}':
    get:
      tags:
        - promotions
      summary: Find promotion by ID
      description: Returns a single promotion
      parameters:
        - name: id
          in: path
          description: ID of promotion to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          description: Promotion not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionNotFoundException'
  /students:
    get:
      tags:
        - students
      summary: Get all students
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                  
  '/students/{id}':
    get:
      tags:
        - students
      summary: Find student by ID
      description: Returns a single student
      parameters:
        - name: id
          in: path
          description: ID of student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentNotFoundException'
          
  '/students/{id}/travels':
    get:
      tags:
        - students
      summary: Get travels from student id
      parameters:
        - name: id
          in: path
          description: ID of student
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Travel'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentNotFoundException'
    post:
      tags:
        - students
      summary: Create a travel to student
      parameters:
        - name: id
          in: path
          description: ID of student
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Travel'
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelDTO'
              
  '/students/{studentId}/travels/{travelId}':
    get:
      tags:
        - students
      summary: Returns travel from student id and travel id
      description: Returns travel from student id and travel id
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: travelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Travel'
        '404':
          description: Travel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotFoundException'
    delete:
      tags:
        - students
      summary: Deletes a travel to student
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: travelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Travel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotFoundException'
    patch:
      tags:
        - students
      summary: Modify a travel to student
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: travelId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Travel'
        '404':
          description: Travel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelDTO'
              
  /travels:
    get:
      tags:
        - travels
      summary: Get all promotions
      parameters:
        - name: country
          in: query
          description: country travel
          required: false
          schema:
            type: string
        - name: city
          in: query
          description: city travel
          required: false
          schema:
            type: string
        - name: company
          in: query
          description: company travel
          required: false
          schema:
            type: string
        - name: promotion
          in: query
          description: promotion travel
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Travel'
                  
  '/travels/{id}':
    get:
      tags:
        - travels
      summary: Find Travel by ID
      description: Returns a single travel
      parameters:
        - name: id
          in: path
          description: ID of travel to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Travel'
        '404':
          description: Travel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelNotFoundException'
  '/login':
    post:
      tags:
        - login
      summary: Logs user into the system
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '404':
          description: Login or Password incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOrPasswordIncorrectException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
    

  
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 15
        lastname:
          type: string
          example: "Dupont"
        firstname:
          type: string
          example: "Jean"
        appUser:
          $ref: '#/components/schemas/AppUser'
    Promotion:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        label:
          type: string
          example: "FISE1"
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 6
        lastname:
          type: string
          example: "Dupont"
        firstname:
          type: string
          example: "Jean"
        appUser:
          $ref: '#/components/schemas/AppUser'
        promotion:
          $ref: '#/components/schemas/Promotion'
        travels:
          type: array
          items:
            $ref: '#/components/schemas/Travel'
    AppUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 18
        username:
          type: string
          example: "d.jean"
        password:
          type: string
          example: "123456"
        person:
          $ref: '#/components/schemas/Person'
    Travel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        country:
          type: string
          example: "France"
        city:
          type: string
          example: "Paris"
        company:
          type: string
          example: "Orange"
        startDate:
          type: string
          format: date
          example: "2021-01-30"
        endDate:
          type: string
          format: date
          example: "2021-02-15"
        student:
          $ref: '#/components/schemas/Student'
    CreateTravelDTO:
      type: object
      properties:
        country:
          type: string
          example: "France"
        city:
          type: string
          example: "Paris"
        company:
          type: string
          example: "Orange"
        startDate:
          type: string
          format: date
          example: "2021-01-30"
        endDate:
          type: string
          format: date
          example: "2021-02-15"
    LoginDTO:
      type: object
      properties:
        username:
          type: string
          example: "d.jean"
        password:
          type: string
          example: "123456"
    PromotionNotFoundException:
      type: object
      properties:
        error:
          type: string
          example: "PromotionNotFoundException"
        message:
          type: string
          example: "Promotion with id 6668523 not found"
        path:
          type: string
          example: "/promotions/6668523"
    StudentNotFoundException:
      type: object
      properties:
        error:
          type: string
          example: "StudentNotFoundException"
        message:
          type: string
          example: "Student with id 6668523 not found"
        path:
          type: string
          example: "/students/6668523"
    TravelNotFoundException:
      type: object
      properties:
        error:
          type: string
          example: "TravelNotFoundException"
        message:
          type: string
          example: "Travel with id 6668523 not found"
        path:
          type: string
          example: "/travels/6668523"
    LoginOrPasswordIncorrectException:
      type: object
      properties:
        error:
          type: string
          example: "LoginOrPasswordIncorrectException"
        message:
          type: string
          example: "Login or Password incorrect"
        path:
          type: string
          example: "/login"